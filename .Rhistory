labs(title = "How Many Miles do Carriers Cover on Average?",
subtitle = "Data taken over one month from airports around the US",
x = "Carrier Name",
y = "Miles Flown",
fill = "Carrier Name") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none")
ggplot(boxplot_flights, aes(x = name, y = avg_distance, fill = name)) +
geom_col() +
scale_fill_manual(values = muted_palette) +
theme_minimal() +
labs(title = "How Many Miles do Carriers Cover on Average?",
subtitle = "Data taken over one month from airports around the US",
x = "Carrier Name",
y = "Miles Flown",
fill = "Carrier Name") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none")
remotes::install_github("anthonynorth/rscodeio")
install.packages("remotes")
remotes::install_github("anthonynorth/rscodeio")
rscodeio::install_theme()
rscodeio::install_theme()
rscodeio::install_theme()
knitr::opts_chunk$set(echo = TRUE)
# knitr::opts_knit$set(root.dir = "C:/Users/kgore/Documents/DATA 596 - Survival analysis/Survival Datasets")
library(tidyverse)
library(skimr)
library(survival)
library(survminer)
library(asaur)
library(broom)
library(autoplotly)
# library(Rcmdr) # freezes up my computer, so we'll bypass it
survObject=Surv(jasa$futime,jasa$fustat)
coxMod=coxph(survObject ~ transplant, data=jasa)
summary(coxMod)
ds <- function(nothing, nothing){
# perform no operation here at all...
}
survObject=Surv(jasa$futime,jasa$fustat)
coxMod=coxph(survObject ~ transplant, data=jasa)
summary(coxMod)
ds <- function(){
# perform no operation here at all...
}
survObject=Surv(jasa$futime,jasa$fustat)
coxMod=coxph(survObject ~ transplant, data=jasa)
summary(coxMod)
square_two_numbers <- function(n1){
n1**2
}
square_two_numbers(2)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(survival)
library(survminer)
library(tidyverse)
# Read in Data
library(readr)
churn <- read_csv("WA_Fn-UseC_-Telco-Customer-Churn.csv")
# One-hot encode response variable:
churn$Churn <- ifelse(churn$Churn == "No", 0, ifelse(churn$Churn == "Yes", 1, NA))
# We don't have recurrence... :(
churn$customerID[duplicated(churn$customerID)]
km = survfit(Surv(tenure, Churn) ~ 1, data = churn)
summary(km)
ggsurvplot(km, churn, conf.int = TRUE, palette = "darkred") +
labs(title = "Tenure vs Churn Kaplan-Meier Curve")
km_pay = survfit(Surv(tenure, Churn) ~ PaymentMethod, data = churn)
summary(km_pay)
ggsurvplot(km_pay, churn, conf.int = TRUE) +
labs(title = "Payment Method and Customer Churn")
# Proportions (uncomment):
# table(churn$PaymentMethod)
# New autopay column:
churn$automatic_payment = ifelse(grepl("automatic", churn$PaymentMethod), 1, 0)
# Automatic vs Manual Payment:
km_autopay <- survfit(Surv(tenure, Churn) ~ automatic_payment, data = churn)
summary(km_autopay)
ggsurvplot(km_autopay, conf.int = TRUE) +
labs(title = "Automatic vs Manual Payment")
# Proportions (uncomment):
# table(churn$automatic_payment)
# Tech Support
km_tech <- survfit(Surv(tenure, Churn) ~ TechSupport, data = churn)
summary(km_tech)
ggsurvplot(km_tech, conf.int = TRUE) +
labs(title = "Tech Support and Churn")
# Contract type:
km_contract <- survfit(Surv(tenure, Churn) ~ Contract, data = churn)
ggsurvplot(km_contract, conf.int = TRUE) +
labs(title = "Contract Type and churn")
# KM Charges Categorical:
sum_stats <- summary(churn$MonthlyCharges)
breaks = c(sum_stats[1], sum_stats[2], sum_stats[4], sum_stats[5], sum_stats[6])
labels = c("Low", "Medium", "High", "Very High")
churn$binned_payments <- cut(churn$MonthlyCharges, breaks = breaks, labels = labels, include.lowest = TRUE)
# Binned Charges KM:
km_binpay = survfit(Surv(tenure, Churn) ~ binned_payments, data = churn)
ggsurvplot(km_binpay, conf.int = TRUE) +
labs(title = "Charge Levels")
# This appears to be a non-monotonic and skewed distribution, which is good news!
# We should be able to use a weibull distribution.
ggplot(data = churn, aes(x = tenure)) +
geom_histogram(bins = 40, fill = "steelblue") +
theme_minimal()
# Not immediately a valid distribution, has 11 0 values.
# Drop 0 values
churn = churn[churn$tenure != 0, ]
weibull = survreg(Surv(churn$tenure, churn$Churn) ~ 1, dist = "weibull")
summary(weibull)
AIC(weibull)
wb_mult =  survreg(Surv(churn$tenure, churn$Churn) ~ churn$binned_payments +
churn$automatic_payment + churn$Contract, dist = "weibull")
AIC(wb_mult)
# Double log transformation:
tibble(
logLogSurvProb = log(-log(km$surv)),
logSurvTime = log(km$time)
) %>%
ggplot(aes(x=logSurvTime,y=logLogSurvProb)) +
geom_point(color="cyan4") +
labs(
title="Weibull Fit Test",
subtitle = "This works!",
x = "log(Survival Time)",
y = "log[-log(-S(t))]"
) +
theme_minimal()
wb_sink = survreg(Surv(churn$tenure, churn$Churn) ~ churn$binned_payments +
churn$automatic_payment + churn$Contract + churn$gender + churn$TechSupport, dist = "weibull")
AIC(wb_sink)
predictor_vars <- c("SeniorCitizen", "Partner", "Dependents", "tenure", "InternetService",
"MonthlyCharges", "TotalCharges",
"automatic_payment","binned_payments")
cox_mod = coxph(Surv(tenure, Churn) ~ SeniorCitizen + Partner + Dependents +
InternetService + MonthlyCharges + TotalCharges + automatic_payment +
binned_payments, data = churn)
AIC(cox_mod)
summary(cox_mod)
cox.zph <- cox.zph(cox_mod)
ggcoxzph(cox.zph)
log_mod <- survreg(Surv(churn$tenure, churn$Churn) ~ 1, dist = "lognormal")
summary(log_mod)
AIC(log_mod)
churn$automatic_payment <- as.factor(churn$automatic_payment)
surv_object = Surv(pmax(.0001, churn$tenure), churn$Churn)
weibull = survreg(surv_object ~ automatic_payment, data = churn)
failTimes=predict(weibull,data.frame(automatic_payment=unique(churn$automatic_payment)),type="quantile",p=seq(0.01,0.99,0.01),se.fit = F)
head(failTimes)
pred=as_tibble(t(failTimes))
head(pred)
# Convert the predicted matrix to a tibble
pred <- as_tibble(pred_matrix)
head(pred)
names(pred) = names(km_autopay$strata)
head(pred)
pred %>%
pivot_longer(`automatic_payment=0`:`automatic_payment=1`,
names_to = "payment", values = "time"
) %>%
mutate(
surv = 1 - rep(seq(0.01, 0.99, 0.01), each = 2)
) %>%
ggplot(aes(x = time, y = surv, color = payment)) +
geom_line(linetype = "dashed", linewidth = 1.08) +
geom_line(data = ds_km_auto, aes(
x = time, y = surv, color = payment), inherit.aes = FALSE) +
scale_x_continuous(limits = c(0, 7000)) +
scale_y_continuous(labels = scaled::percent_format()) +
scale_color_manual(values = c("automatic_payment=0" = "cyan4", "automatic_payment=1" = "darkred")) +
theme_minimal() +
labs(
title = "Survival Time with and without Automatic Payment",
x = "Time until exit (months)",
y = "S(t)"
)
pred %>%
pivot_longer(`automatic_payment=0`:`automatic_payment=1`,
names_to = "payment", values_to = "time"
) %>%
mutate(
surv = 1 - rep(seq(0.01, 0.99, 0.01), each = 2)
) %>%
ggplot(aes(x = time, y = surv, color = payment)) +
geom_line(linetype = "dashed", linewidth = 1.08) +
geom_line(data = ds_km_auto, aes(
x = time, y = surv, color = payment), inherit.aes = FALSE) +
scale_x_continuous(limits = c(0, 7000)) +
scale_y_continuous(labels = scaled::percent_format()) +
scale_color_manual(values = c("automatic_payment=0" = "cyan4", "automatic_payment=1" = "darkred")) +
theme_minimal() +
labs(
title = "Survival Time with and without Automatic Payment",
x = "Time until exit (months)",
y = "S(t)"
)
ds_km_auto = tibble(
time = km_autopay$time,
surv = km_autopay$surv,
automatic_payment = rep(names(km_autopay$strata),
times = km_autopay$strata)
)
pred %>%
pivot_longer(`automatic_payment=0`:`automatic_payment=1`,
names_to = "payment", values_to = "time"
) %>%
mutate(
surv = 1 - rep(seq(0.01, 0.99, 0.01), each = 2)
) %>%
ggplot(aes(x = time, y = surv, color = payment)) +
geom_line(linetype = "dashed", linewidth = 1.08) +
geom_line(data = ds_km_auto, aes(
x = time, y = surv, color = payment), inherit.aes = FALSE) +
scale_x_continuous(limits = c(0, 7000)) +
scale_y_continuous(labels = scaled::percent_format()) +
scale_color_manual(values = c("automatic_payment=0" = "cyan4", "automatic_payment=1" = "darkred")) +
theme_minimal() +
labs(
title = "Survival Time with and without Automatic Payment",
x = "Time until exit (months)",
y = "S(t)"
)
pred %>%
pivot_longer(`automatic_payment=0`:`automatic_payment=1`,
names_to = "payment", values_to = "time"
) %>%
mutate(
surv = 1 - rep(seq(0.01, 0.99, 0.01), each = 2)
) %>%
ggplot(aes(x = time, y = surv, color = payment)) +
geom_line(linetype = "dashed", linewidth = 1.08) +
geom_line(data = ds_km_auto, aes(
x = time, y = surv, color = payment), inherit.aes = FALSE) +
scale_x_continuous(limits = c(0, 7000)) +
scale_y_continuous(labels = scales::percent_format()) +
scale_color_manual(values = c("automatic_payment=0" = "cyan4", "automatic_payment=1" = "darkred")) +
theme_minimal() +
labs(
title = "Survival Time with and without Automatic Payment",
x = "Time until exit (months)",
y = "S(t)"
)
pred %>%
pivot_longer(`automatic_payment=0`:`automatic_payment=1`,
names_to = "payment", values_to = "time"
) %>%
mutate(
surv = 1 - rep(seq(0.01, 0.99, 0.01), each = 2)
) %>%
ggplot(aes(x = time, y = surv, color = payment)) +
geom_line(linetype = "dashed", linewidth = 1.08) +
geom_line(data = ds_km_auto, aes(
x = time, y = surv, color = automatic_payment), inherit.aes = FALSE) +
scale_x_continuous(limits = c(0, 7000)) +
scale_y_continuous(labels = scales::percent_format()) +
scale_color_manual(values = c("automatic_payment=0" = "cyan4", "automatic_payment=1" = "darkred")) +
theme_minimal() +
labs(
title = "Survival Time with and without Automatic Payment",
x = "Time until exit (months)",
y = "S(t)"
)
pred %>%
pivot_longer(`automatic_payment=0`:`automatic_payment=1`,
names_to = "payment", values_to = "time"
) %>%
mutate(
surv = 1 - rep(seq(0.01, 0.99, 0.01), each = 2)
) %>%
ggplot(aes(x = time, y = surv, color = payment)) +
geom_line(linetype = "dashed", linewidth = 1.08) +
geom_line(data = ds_km_auto, aes(
x = time, y = surv, color = automatic_payment), inherit.aes = FALSE) +
scale_x_continuous(limits = c(0, 6000)) +
scale_y_continuous(labels = scales::percent_format()) +
scale_color_manual(values = c("automatic_payment=0" = "cyan4", "automatic_payment=1" = "darkred")) +
theme_minimal() +
labs(
title = "Survival Time with and without Automatic Payment",
x = "Time until exit (months)",
y = "S(t)"
)
pred %>%
pivot_longer(`automatic_payment=0`:`automatic_payment=1`,
names_to = "automatic_payment", values_to = "time"
) %>%
mutate(
surv = 1 - rep(seq(0.01, 0.99, 0.01), each = 2)
) %>%
ggplot(aes(x = time, y = surv, color = automatic_payment)) +
geom_line(linetype = "dashed", linewidth = 1.08) +
geom_line(data = ds_km_auto, aes(
x = time, y = surv, color = automatic_payment), inherit.aes = FALSE) +
scale_x_continuous(limits = c(0, 6000)) +
scale_y_continuous(labels = scales::percent_format()) +
scale_color_manual(values = c("automatic_payment=0" = "cyan4", "automatic_payment=1" = "darkred")) +
theme_minimal() +
labs(
title = "Survival Time with and without Automatic Payment",
x = "Time until exit (months)",
y = "S(t)"
)
head(ds_km_auto)
View(ds_km_auto)
pred %>%
pivot_longer(`automatic_payment=0`:`automatic_payment=1`,
names_to = "payment", values_to = "time"
) %>%
mutate(
surv = 1 - rep(seq(0.01, 0.99, 0.01), each = 2)
) %>%
ggplot(aes(x = time, y = surv, color = payment)) +
geom_line(linetype = "dashed", linewidth = 1.08) +
geom_line(data = ds_km_auto, aes(
x = time, y = surv, color = automatic_payment), inherit.aes = FALSE) +
scale_x_continuous(limits = c(0, 6000)) +
scale_y_continuous(labels = scales::percent_format()) +
scale_color_manual(values = c("automatic_payment=0" = "cyan4", "automatic_payment=1" = "darkred")) +
theme_minimal() +
labs(
title = "Survival Time with and without Automatic Payment",
x = "Time until exit (months)",
y = "S(t)"
)
pred %>%
pivot_longer(`automatic_payment=0`:`automatic_payment=1`,
names_to = "payment", values_to = "time"
) %>%
mutate(
surv = 1 - rep(seq(0.01, 0.99, 0.01), each = 2)
) %>%
ggplot(aes(x = time, y = surv, color = payment)) +
geom_line(linetype = "dashed", linewidth = 1.08) +
geom_line(data = ds_km_auto, aes(
x = time, y = surv, color = automatic_payment), inherit.aes = FALSE) +
scale_x_continuous(limits = c(0, 6000)) +
scale_y_continuous(labels = scales::percent_format()) +
scale_color_manual(values = c("automatic_payment=0" = "cyan4", "automatic_payment=1" = "darkred")) +
theme_minimal() +
labs(
title = "Survival Time with and without Automatic Payment",
x = "Time until exit (months)",
y = "S(t)"
)
ggplot() +
geom_line(data = ds_km_auto, aes(
x = time, y = surv, color = automatic_payment), inherit.aes = FALSE)
pred %>%
pivot_longer(`automatic_payment=0`:`automatic_payment=1`,
names_to = "payment", values_to = "time"
) %>%
mutate(
surv = 1 - rep(seq(0.01, 0.99, 0.01), each = 2)
) %>%
ggplot(aes(x = time, y = surv, color = payment)) +
geom_line(linetype = "dashed", linewidth = 1.08) +
geom_line(data = ds_km_auto, aes(
x = time, y = surv, color = automatic_payment), inherit.aes = FALSE) +
scale_x_continuous(limits = c(0, 80)) +
scale_y_continuous(labels = scales::percent_format()) +
scale_color_manual(values = c("automatic_payment=0" = "cyan4", "automatic_payment=1" = "darkred")) +
theme_minimal() +
labs(
title = "Survival Time with and without Automatic Payment",
x = "Time until exit (months)",
y = "S(t)"
)
churn$automatic_payment <- as.factor(churn$automatic_payment)
surv_object = Surv(pmax(.0001, churn$tenure), churn$Churn)
weibull = survreg(surv_object ~ automatic_payment, data = churn)
failTimes=predict(weibull,data.frame(automatic_payment=unique(churn$automatic_payment)),type="quantile",p=seq(0.01,0.99,0.01),se.fit = F)
head(failTimes)
pred=as_tibble(t(failTimes))
head(pred)
names(pred) = names(km_autopay$strata)
ds_km_auto = tibble(
time = km_autopay$time,
surv = km_autopay$surv,
automatic_payment = rep(names(km_autopay$strata),
times = km_autopay$strata)
)
head(ds_km_auto)
pred %>%
pivot_longer(`automatic_payment=0`:`automatic_payment=1`,
names_to = "payment", values_to = "time"
) %>%
mutate(
surv = 1 - rep(seq(0.01, 0.99, 0.01), each = 2)
) %>%
ggplot(aes(x = time, y = surv, color = payment)) +
geom_line(linetype = "dashed", linewidth = 1.08) +
geom_line(data = ds_km_auto, aes(
x = time, y = surv, color = automatic_payment), inherit.aes = FALSE) +
scale_x_continuous(limits = c(0, 8=75)) +
pred %>%
pivot_longer(`automatic_payment=0`:`automatic_payment=1`,
names_to = "payment", values_to = "time"
) %>%
mutate(
surv = 1 - rep(seq(0.01, 0.99, 0.01), each = 2)
) %>%
ggplot(aes(x = time, y = surv, color = payment)) +
geom_line(linetype = "dashed", linewidth = 1.08) +
geom_line(data = ds_km_auto, aes(
x = time, y = surv, color = automatic_payment), inherit.aes = FALSE) +
scale_x_continuous(limits = c(0, 8=75)) +
churn$automatic_payment <- as.factor(churn$automatic_payment)
surv_object = Surv(pmax(.0001, churn$tenure), churn$Churn)
weibull = survreg(surv_object ~ automatic_payment, data = churn)
failTimes=predict(weibull,data.frame(automatic_payment=unique(churn$automatic_payment)),type="quantile",p=seq(0.01,0.99,0.01),se.fit = F)
head(failTimes)
pred=as_tibble(t(failTimes))
head(pred)
names(pred) = names(km_autopay$strata)
ds_km_auto = tibble(
time = km_autopay$time,
surv = km_autopay$surv,
automatic_payment = rep(names(km_autopay$strata),
times = km_autopay$strata)
)
head(ds_km_auto)
pred %>%
pivot_longer(`automatic_payment=0`:`automatic_payment=1`,
names_to = "payment", values_to = "time"
) %>%
mutate(
surv = 1 - rep(seq(0.01, 0.99, 0.01), each = 2)
) %>%
ggplot(aes(x = time, y = surv, color = payment)) +
geom_line(linetype = "dashed", linewidth = 1.08) +
geom_line(data = ds_km_auto, aes(
x = time, y = surv, color = automatic_payment), inherit.aes = FALSE) +
scale_x_continuous(limits = c(0, 8=75)) +
churn$automatic_payment <- as.factor(churn$automatic_payment)
surv_object = Surv(pmax(.0001, churn$tenure), churn$Churn)
weibull = survreg(surv_object ~ automatic_payment, data = churn)
failTimes=predict(weibull,data.frame(automatic_payment=unique(churn$automatic_payment)),type="quantile",p=seq(0.01,0.99,0.01),se.fit = F)
head(failTimes)
pred=as_tibble(t(failTimes))
head(pred)
names(pred) = names(km_autopay$strata)
ds_km_auto = tibble(
time = km_autopay$time,
surv = km_autopay$surv,
automatic_payment = rep(names(km_autopay$strata),
times = km_autopay$strata)
)
head(ds_km_auto)
pred %>%
pivot_longer(`automatic_payment=0`:`automatic_payment=1`,
names_to = "payment", values_to = "time"
) %>%
mutate(
surv = 1 - rep(seq(0.01, 0.99, 0.01), each = 2)
) %>%
ggplot(aes(x = time, y = surv, color = payment)) +
geom_line(linetype = "dashed", linewidth = 1.08) +
geom_line(data = ds_km_auto, aes(
x = time, y = surv, color = automatic_payment), inherit.aes = FALSE) +
scale_x_continuous(limits = c(0, 75)) +
scale_y_continuous(labels = scales::percent_format()) +
scale_color_manual(values = c("automatic_payment=0" = "cyan4", "automatic_payment=1" = "darkred")) +
theme_minimal() +
labs(
title = "Survival Time with and without Automatic Payment",
x = "Time until exit (months)",
y = "S(t)"
)
# Kitchen Sink!
wb_sink = survreg(Surv(churn$tenure, churn$Churn) ~ binned_payments +
automatic_payment + Contract + gender + TechSupport,
data = churn, dist = "weibull")
km_sink = surfit(Surv(churn$tenure, churn$Churn) ~ binned_payments +
automatic_payment + Contract + gender + TechSupport,
data = churn)
km_sink = survfit(Surv(churn$tenure, churn$Churn) ~ binned_payments +
automatic_payment + Contract + gender + TechSupport,
data = churn)
data.frame(binned_payments = unique(churn$binned_payments), automatic_payment = unique(churn$automatic_payment), contract = unique(churn$Contract), gender = unique(churn$gender), tech_support = unique(churn$TechSupport))
data.frame(cols = c(binned_payments = unique(churn$binned_payments), automatic_payment = unique(churn$automatic_payment), contract = unique(churn$Contract), gender = unique(churn$gender), tech_support = unique(churn$TechSupport)))
data.frame(binned_payments = unique(churn$binned_payments), automatic_payment = unique(churn$automatic_payment), contract = unique(churn$Contract), gender = unique(churn$gender), tech_support = unique(churn$TechSupport))
survdiff(Surv(tenure, Churn) ~ Contract, data = churn)
ggsurvplot(km_contract, conf.int = TRUE) +
labs(title = "Contract Type and churn")
knitr::opts_chunk$set(echo = TRUE)
weibull$coefficients
1/weibull$scale
1/wb_mult$scale
1/wb_sink$scale
pt(9.524, 109)
pt(9.524, 111)
install.packages("installr")
library(installr)
updateR()
library(devtools)
install.packages("devtools")
ls
gc()
install.packages("styler")
install.packages("lintr")
install.packages("testthat")
R.home()
file.edit(file.path("~", ".Rprofile"))
install.packages("devtools")
file.edit(file.path("~", ".Rprofile"))
create_package()
create_package(getwd())
setwd("~/adjustR")
create_package(getwd())
usethis::edit_r_profile()
